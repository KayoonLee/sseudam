<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pet.sseudam.dao.MemberDao">

<!-- 상담사 회원 가입 시, 해당하는 회원번호 찾기 -->
    <select id="getNumber" parameterType="member" resultType="int">
        select m_id from member where nick = #{nick}
    </select>

<!--(공통요소)회원가입-->
    <insert id="insert" parameterType="member">
        insert into member (name, email, passwd, nick, birth, tel, identifier, state, join_date, reset, profile_num) values
        (#{name}, #{email}, #{passwd}, #{nick}, #{birth}, #{tel}, #{identifier}, 1 , sysdate(), 'n', null)
    </insert>

<!--    email 중복검사-->
    <select id="emailChk" parameterType="String" resultType="member">

        select * from member where email = #{email} and state=1
    </select>

<!--    nick 중복검사-->
    <select id="nickChk" parameterType="String" resultType="member">
        select * from member where nick = #{nick} and state=1
    </select>

<!-- 로그인 -->
    <select id="userCheck" parameterType="String" resultType="member">
        select * from member where email=#{email} and state=1
    </select>


<!-- 아이디 찾기 -->
    <select id="searchEmail" parameterType="member" resultType="member">
        select * from member where nick=#{nick} and state=1
    </select>

<!--비번찾기: 아이디와 이메일이 DB에 존재하는지 먼저 검사 -->
    <select id="searchPwd" parameterType="member" resultType="member">
        select * from member where email=#{email} and nick=#{nick} and state=1
    </select>

<!-- 임시비번으로 비번 업뎃, reset컬럼 y로 변경-->
    <update id="updatePwd" parameterType="member">
        update member set passwd=#{passwd}, reset='y' where email=#{email} and nick=#{nick}
        and state=1
    </update>



    <!--일반회원 정보 수정-->
    <update id="myUpdate" parameterType="member">
        update member  set
        name=#{name}, nick=#{nick}, birth=#{birth}, tel=#{tel}
        where email = #{email}

    </update>

    <!--   사진 포함  정보 수정-->
    <update id="myPicUpdate" parameterType="member">
        update member m inner join img_profile p on m.profile_num = p.profile_num
        set name=#{name}, nick=#{nick}, birth=#{birth}, tel=#{tel}, profile_origin = #{profile_origin},
        profile_name =#{profile_name}
        where email = #{email}
    </update>




    <!--일반회원: 비번 변경, reset 컬럼 'n' 수정-->
    <update id="myPwUpdate" parameterType="member">
        update member set passwd=#{passwd}, reset='n' where email=#{email}
    </update>

    <!--    상담사 정보수정 - member 테이블 컬럼 변경-->
    <update id="csMyUpdate" parameterType="member">

        UPDATE member m INNER JOIN counselor c ON m.m_id = c.c_id
        SET m.name = #{name}, m.nick = #{nick}, m.birth = #{birth}, m.tel = #{tel}
        WHERE m.m_id = #{m_id}
    </update>

    <!--    상담사: 비번 변경, reset 'n'으로 수정-->
    <update id="csMyPwUpdate" parameterType="member">
        update member set passwd=#{passwd}, reset='n' where email=#{email}
    </update>



    <!--    첨부파일 번호 -->
    <select id="getMaxnum" resultType="int">
        select ifnull(max(profile_num), 0) from img_profile
    </select>

    <!--첨부파일 추가-->
    <insert id="profileAdd" parameterType="profile_board">
        <selectKey keyProperty="profile_num" order="BEFORE" resultType="int">
            select ifnull(max(profile_num),0) + 1 from img_profile
        </selectKey>
        insert into img_profile values(#{profile_num}, #{profile_origin}, #{profile_name})
    </insert>

    <!--member의 profile_num 업데이트-->
<!--    <update id="profileNumUp" parameterType="profile_board">-->
<!--        <selectKey keyProperty="profile_num" order="BEFORE" resultType="int">-->
<!--            select ifnull(max(profile_num),0) + 1 from img_profile-->
<!--        </selectKey>-->
<!--        update member set profile_num = #{profile_num}-->
<!--    </update>-->

    <select id="counselorList" parameterType="member" resultType="member">
        SELECT m_id, name, license, career
        FROM member m
        INNER JOIN counselor c ON c.c_id = m.m_id
    </select>



</mapper>