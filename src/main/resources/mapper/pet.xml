<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.pet.sseudam.dao.PetDao">
    <!--반려동물 목록-->
    <select id="p_list" parameterType="pet" resultType="pet">
        SELECT *
        FROM pet
                 LEFT JOIN img_profile ON pet.profile_num = img_profile.profile_num
        WHERE  g_id=#{g_id}
        UNION
        SELECT *
        FROM pet
                 RIGHT JOIN img_profile ON pet.profile_num = img_profile.profile_num
        WHERE pet.profile_num IS NULL and g_id=#{g_id}

    </select>

    <!-- 반려동물 몇 마리-->
    <select id="getTotal" resultType="int">
        select count(*) from pet
    </select>

    <!--프로필사진만 추가-->
    <insert id="profileAdd" parameterType="profile_board">
        <selectKey keyProperty="profile_num" order="BEFORE" resultType="int">
            select ifnull(max(profile_num),0) + 1 from img_profile
        </selectKey>
        insert into img_profile values(#{profile_num}, #{profile_origin}, #{profile_name})
    </insert>

    <!-- 반려동물 상세정보 -->
    <select id="p_select" parameterType="int" resultType="pet">
        SELECT *
        FROM pet
                 LEFT JOIN img_profile ON pet.profile_num = img_profile.profile_num
        WHERE pet.p_id = #{p_id}
        UNION
        SELECT *
        FROM pet
                 RIGHT JOIN img_profile ON pet.profile_num = img_profile.profile_num
        WHERE pet.profile_num IS NULL and g_id=#{g_id}

    </select>


    <!-- 반려동물 수정-->
    <insert id="p_insert" parameterType="pet">
        insert into pet (p_id, g_id, animal, birth, kind, breed, profile_num, feature, gender, neutering, state)
        values (#{p_id}, #{g_id}, #{animal}, #{birth}, #{kind}, #{breed}, #{profile_num}, #{feature}, #{gender}, #{neutering}, #{state})
    </insert>

    <!--부모테이블에 먼저 insert-->
    <insert id="profileInsert" parameterType="pet">
        insert into img_profile(profile_origin, profile_name)
        values (#{profile_origin}, #{profile_name})
    </insert>

    <!-- 프로필사진 제외한 수정 관련-->
    <update id="p_modify" parameterType="pet">
        UPDATE pet
        SET animal=#{animal}, birth=#{birth}, kind=#{kind}, breed=#{breed},
            feature=#{feature}, gender=#{gender}, neutering=#{neutering}
        WHERE
            p_id=#{p_id}
    </update>




    <!-- 프로필사진 관련-->
    <update id="p_update" parameterType="pet">
        <selectKey keyProperty="profile_num" order="BEFORE" resultType="int">
            select max(profile_num) from img_profile
        </selectKey>

        UPDATE pet
        SET animal=#{animal}, birth=#{birth}, kind=#{kind}, breed=#{breed},
        feature=#{feature}, gender=#{gender}, neutering=#{neutering}, profile_num=#{profile_num}
        WHERE
        p_id=#{p_id}
    </update>

    <!-- 프로필사진 추가 -->
    <select id="getMaxnum" resultType="int">
        select ifnull(max(profile_num), 0) from img_profile
    </select>


    <select id="profileSelect" parameterType="profile_board" resultType="String">
        select profile_name from img_profile where profile_num=#{profile_num}
    </select>


    <!-- 프로필사진 삭제-->
    <delete id="profileDelete" parameterType="int">
        delete from img_profile where profile_num=#{profile_num}
    </delete>

    <!--프로필사진 수정-->
    <update id="profileUpdate" parameterType="int">
        UPDATE pet
            LEFT JOIN img_profile ON pet.profile_num = img_profile.profile_num
            SET img_profile.profile_name = CASE
                WHEN pet.profile_num IS NOT NULL THEN #{profile_name}
                ELSE img_profile.profile_name
        END,
                img_profile.profile_origin = CASE
                WHEN pet.profile_num IS NOT NULL THEN #{profile_origin}
        ELSE img_profile.profile_origin
        END
    </update>

</mapper>
